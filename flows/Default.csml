// Ceci est un commentaire, ils commencent tous par //
// Le CSML ignore les commentaires, ils sont utiles pour les d√©veloppeurs :3

// Un chatbot commence toujours par l'√©tape "start" ci-dessous
start:
  // On va saluer l'utilisateur avec la commande `say`
  say "Salut!"
  say Typing(3000)
  say "Je suis Shopibot, le bot qui trouve les commerces de proximit√© dans Paris! ü§ô"
  // On peut poser une question √† l'utilisateur et donner des choix de boutons
  say Question("Tu es pr√™t.e ?",
    buttons=[
      // Vous remarquerez qu'on utilise le mot cl√© "as", il permet au csml de se souvenir de ce bouton
      // pour s'en servir plus tard (dans le if)
      Button("Oui let's gooo! üî•") as btnOui,
      Button("Pas tout √† fait üòï") as btnNon
    ])
  // "hold" indique au chatbot qu'il doit attendre une r√©ponse de l'utilisateur (une phrase ou un click)
	hold
  // La r√©ponse de l'utilisateur va arriver dans la variable `event`
  // Dans le cas pr√©sent on va voir ce que contient cette variable en demandant au csml si event "match" le bouton Oui
  if (event match btnOui) {
    say "Super allons-y!"
  } else {
    say "Pas de soucis, je me tiens √† ta disposition!"
    goto end
  }
  
// ############################################################
// √Ä toi de jouer maintenant, il va falloir remplir les trous !
// ############################################################
// Exercice 0 : Efface la ligne ci-dessous pour commencer l'atelier


  remember category = false
  remember arrondissement = false
  remember service = false

  say "Je connais tous les commerces parisiens, je peux trouver tout ce que tu recherches."
  say "J'ai juste besoin de te poser quelques questions üßê."
	goto quelleCategorie

quelleCategorie:
  // 1 - Il manque un mot cl√© pour poser la question
	say Question("Quelle cat√©gorie de commerce recherches-tu?",
	buttons=[
    Button("Boulangerie"),
    Button("Restaurant"),
    Button("Librairie"),
    Button("Caviste - Brasserie"),
    Button("Fleuriste"),
    Button("Boucherie"),
    Button("Primeur"),
    Button("Alimentation g√©n√©rale"),
    Button("Blanchisserie"),
    Button("Poissonnerie"),
    Button("Fromagerie"),
    Button("Cosm√©tique"),
    Button("√âpicerie fine"),
    Button("Bricolage")
  ])
  // 2 - Indique au chatbot d'attendre la r√©ponse de l'utilisateur ici
	????
  // 3 - Le chatbot doit se souvenir de la variable `category`
	???? category = event
  goto quelArrondissement


// 4 - Il faut nommer l'√©tape ci-dessous
????:
  // 5 - Tu dois ajouter le mot cl√© manquant pour que √ßa marche
  say ????("Dis moi dans quel arrondissement tu te trouves.",
	  buttons=[Button("Pas d'arrondissement en particulier")
  ])
  hold
  // 7 - Tu dois te souvenir de la saisie de l'utilisateur
  // en la mettant dans la variable `arrondissement`
  remember ???? = ????
  // 8 - Envoie le chatbot √† l'√©tape suivante
  ???? quelService
  
quelService:
  // 9 - Il manque BEAUCOUP de chose ci-dessous
  ???? Question("Quel service recherches-tu ?",
  ????=[
		Button("Retrait de commandes en magasin"),
		Button("Livraisons √† domicile")
  ])
  ????
  ???? service = ????
  // 10 - Indique au chatbot qu'il doit se rendre √† l'√©tape results`
  ???? ????

results:
	say "Roulement de tambours ü•Å"
	say Typing(3000)
  do r = arrondissement.match_regex("[0-9]+")
  if (r) {
    do arr = r[0] + 75000
    if (arr <= 75000 || arr > 75020) {
      do arr = "any"
    }
  } else do arr = "any"
  if (service != "Livraisons √† domicile" && service != "Retrait de commandes en magasin")
    do service = "any"
  // say "{{arr}}"
  do res = App("Commerces", category=category, arrondissement=arr, service=service)
  do cards = []
  if (res.length() == 0) {
    say "Je n'ai pas trouv√© d'activit√©s, d√©sol√© üòî"
    goto start
  }
  do buttons = []
  foreach (val, index) in res {
      do buttons.push(Button(val.fields.nom_du_commerce, payload=val.recordid))
  }
  do buttons.push(Button("üÜï Lancer une nouvelle recherche üßê", payload="RESTART"))
  say QuickReply("Voici les commerces qui correspondent √† ta recherche :",
    buttons = buttons
  )
  hold
  if (event == "RESTART") goto quelleCategorie
  do res = App("Commerces", id=event)
  if (!res.recordid) {
    say "Je ne connais malheureusement pas ce commerce"
    goto results
  }
  say "{{res.fields.nom_du_commerce}} - {{res.fields.type_de_commerce}}"
  say Typing(2000)
  say "{{res.fields.description}}"
  say Typing(4000)
  say "{{res.fields.mail}} - {{res.fields.telephone}}"
  say Typing(2000)
  say Url(res.fields.site_internet, text="Visiter le site")
  goto end